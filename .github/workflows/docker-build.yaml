# The name of the workflow as it will appear in the GitHub Actions UI
name: Build and Push Docker Image

# Define when this workflow should run
on:
    push:
        branches:
            - main # Runs when code is pushed to the main branch

jobs:
    build-and-push: # Name of the job
        runs-on: ubuntu-latest # The environment this job runs on – a GitHub-hosted Ubuntu runner

        steps:
            # Step 1: Check out the code from the current branch
            - name: Checkout code
              uses: actions/checkout@v3

            # Step 2: Set up Docker Buildx, a Docker CLI plugin for advanced builds
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            # Step 3: Log in to Docker Hub using secrets for credentials
            # These secrets must be set up in your GitHub repository settings
            - name: Log in to Docker Hub
              uses: docker/login-action@v2
              with:
                username: ${{ secrets.DOCKERHUB_USERNAME }}    # Your Docker Hub username - need to setup
                password: ${{ secrets.DOCKERHUB_TOKEN }}       # Your Docker Hub access token - need to setup
            
            # Step 4: Build the Docker image and push it to Docker Hub
            # This step also:
            # - builds for both amd64 and arm64 platforms
            # - enables Docker layer caching using GitHub Actions cache
            - name: Build and Push Docker Image
              uses: docker/build-push-action@v5
              with:
                context: ./project-app                # Build context – here it's the root of the repository
                push: true                            # Push the built image to Docker Hub
                platforms: linux/amd64,linux/arm64    # Enables true multi-platform builds
                tags: username/repo:latest            # Image name and tag – replace with your actual Docker Hub repo and Username
                cache-from: type=gha                  # Use GitHub Actions cache for Docker layers
                cache-to: type=gha,mode=max           # Store built layers to the cache for reuse in future builds